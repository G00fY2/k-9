apply plugin: 'com.android.application'

if (!rootProject.optimizeForDevelopment) {
    apply from: '../gradle/plugins/checkstyle-android.gradle'
    apply from: '../gradle/plugins/findbugs-android.gradle'
}

if (rootProject.testCoverage) {
    apply plugin: 'jacoco'
}

repositories {
    jcenter()
}

//noinspection GroovyAssignabilityCheck
configurations.all {
    resolutionStrategy {
        force "com.android.support:support-annotations:${androidSupportLibraryVersion}"
    }
}

dependencies {
    compile project(':k9mail-library')
    compile project(':plugins:Android-PullToRefresh:library')
    compile project(':plugins:HoloColorPicker')
    compile project(':plugins:openpgp-api-lib:openpgp-api')
    compile "com.squareup.okio:okio:${okioVersion}"
    compile 'commons-io:commons-io:2.5'
    compile "com.android.support:support-v4:${androidSupportLibraryVersion}"
    compile "com.android.support:appcompat-v7:${androidSupportLibraryVersion}"
    compile "com.android.support:design:${androidSupportLibraryVersion}"
    compile "net.sourceforge.htmlcleaner:htmlcleaner:${htmlcleaner}"
    compile "de.cketti.library.changelog:ckchangelog:${ckchangelog}"
    compile "com.github.bumptech.glide:glide:${glide}"
    compile "com.splitwise:tokenautocomplete:${tokenautocomplete}"
    compile "de.cketti.safecontentresolver:safe-content-resolver-v14:${safecontentresolver}"
    compile "com.github.amlcurran.showcaseview:library:${showcaseview}"

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.1'

    testCompile "org.robolectric:robolectric:${robolectricVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoVersion}"
    testCompile 'org.jsoup:jsoup:1.10.2'
}

android {
    compileSdkVersion androidCompileSdkVersion.toInteger()
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "com.fsck.k9.materialfork"
        testApplicationId "com.fsck.k9.materialfork.tests"

        versionCode 232701
        versionName '5.207.1'

        minSdkVersion 15
        targetSdkVersion 25

        defaultConfig {
            vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
        }

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            if (project.hasProperty('storeFile')) {
                signingConfig signingConfigs.release
            }

            buildConfigField "boolean", "DEVELOPER_MODE", "false"
        }

        debug {
            applicationIdSuffix ".debug"
            testCoverageEnabled rootProject.testCoverage

            buildConfigField "boolean", "DEVELOPER_MODE", "true"
        }
    }

    // Do not abort build if lint finds errors
    lintOptions {
        abortOnError false
        lintConfig file("$rootProject.projectDir/config/lint/lint.xml")
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'LICENSE.txt'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

if (project.hasProperty('keyAlias')) {
    android.signingConfigs.release.keyAlias = keyAlias
}
if (project.hasProperty('keyPassword')) {
    android.signingConfigs.release.keyPassword = keyPassword
}
if (project.hasProperty('storeFile')) {
    android.signingConfigs.release.storeFile = file(storeFile)
}
if (project.hasProperty('storePassword')) {
    android.signingConfigs.release.storePassword = storePassword
}
